<UserControl
    x:Class="Envedit.ProjectView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Envedit"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <DockPanel>
        <Grid DockPanel.Dock="Bottom">
            <StackPanel
                Margin="4"
                HorizontalAlignment="Left"
                Orientation="Horizontal">
                <Button
                    Margin="4"
                    Padding="4"
                    Command="{Binding Path=LoadEnvValueCommand, Mode=OneTime}">
                    現在の.envを読み取る
                </Button>
                <Button
                    Margin="4"
                    Padding="4"
                    Command="{Binding Path=LoadEnvTemplateValueCommand, Mode=OneTime}">
                    現在の.env.templateを読み取る
                </Button>
                <Button
                    Margin="4"
                    Padding="4"
                    Command="{Binding Path=RefreshValuesCommand, Mode=OneTime}">
                    ユーザー設定を読み取る
                </Button>
                <Button
                    Margin="4"
                    Padding="4"
                    Command="{Binding ClearCommand, Mode=OneTime}">
                    全情報をクリア
                </Button>
            </StackPanel>
            <StackPanel
                Margin="4"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    Margin="4"
                    Padding="4"
                    Command="{Binding Path=SaveToEnvironmentCommand}">
                    .envに保存
                </Button>
                <Button
                    Margin="4"
                    Padding="4"
                    Command="{Binding CloseCommand}">
                    閉じる
                </Button>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel HorizontalAlignment="Stretch">
                <GroupBox DockPanel.Dock="Top" Header="データベース">
                    <WrapPanel>
                        <RadioButton IsChecked="{Binding Path=IsLocalDB}">localhost</RadioButton>
                        <RadioButton IsChecked="{Binding Path=IsDockerDB}">Docker</RadioButton>
                        <RadioButton IsChecked="{Binding Path=IsDevelopDB}">AzureDeveloper</RadioButton>
                    </WrapPanel>
                </GroupBox>
                <GroupBox DockPanel.Dock="Top" Header="サービス">
                    <WrapPanel>
                        <RadioButton IsChecked="{Binding Path=IsDebugService}">VisualStudioDebug</RadioButton>
                        <RadioButton IsChecked="{Binding Path=IsDockerService}">Docker</RadioButton>
                        <RadioButton IsChecked="{Binding Path=IsDevelopService}">AzureDeveloper</RadioButton>
                    </WrapPanel>
                </GroupBox>
                <GroupBox DockPanel.Dock="Top" Header="フロントエンド">
                    <WrapPanel>
                        <RadioButton IsChecked="{Binding Path=IsDebugFrontend}">VSCodeDebug</RadioButton>
                        <RadioButton IsChecked="{Binding Path=IsDockerFrontend}">Docker</RadioButton>
                        <RadioButton IsChecked="{Binding Path=IsDevelopFrontend}">AzureDeveloper</RadioButton>
                    </WrapPanel>
                </GroupBox>
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Button
                        Margin="4"
                        Padding="4"
                        Command="{Binding Path=LoadTemplateCommand}">
                        セットを読み込み
                    </Button>
                    <Button
                        Margin="4"
                        Padding="4"
                        Command="{Binding Path=SaveTemplateCommand}">
                        セットに保存
                    </Button>
                </StackPanel>
                <Grid Grid.Row="4">
                    <ListBox ItemsSource="{Binding Values}" SelectedItem="{Binding SelectedItem}">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:EnvironmentValuePath}">
                                <StackPanel Orientation="Horizontal">
                                    <Button
                                        Padding="6"
                                        Command="{Binding UpdateCommand, Mode=OneTime}"
                                        CommandParameter="{Binding Value}"
                                        Content="{Binding Value}" />
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Foreground="Gray"
                                        Text="{Binding Description}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </DockPanel>
        </Grid>
        <ListBox
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            ItemsSource="{Binding Pathes}"
            SelectionMode="Extended">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding Selected}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter Property="Background" Value="AliceBlue"/>
                            <Setter Property="BorderBrush" Value="Blue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type local:EnvironmentValuePath}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path}" />
                        <TextBlock Text=" : " />
                        <TextBlock Text="{Binding Name}" />
                        <TextBlock Text=" : " />
                        <TextBlock Text="{Binding Value}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</UserControl>
